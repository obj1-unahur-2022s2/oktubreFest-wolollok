import Personas.*
import Marcas.*
import Carpas.*


describe "test de carpas" {
	
	const hobfrau = new Roja(contenidoLupulo = 9, pais = alemania, graduacionReglamentariaNegra = 9)
	
	const corona = new Rubia(contenidoLupulo = 3, pais = mexico, graduacion = 3)
	
	const jarra1 = new Jarra(capacidad = 0.5, contenido = hobfrau)
	
	const jarra2 = new Jarra(capacidad = 1, contenido = corona)
	
	const jarra3 = new Jarra(capacidad = 3, contenido = corona)
	
	const alfonso = new Belga(peso = 120, jarrasCompradas = [], leGustaEscucharMusica = false, nivelDeAguante = 5)
	
	const eduardo = new Aleman(peso = 70, jarrasCompradas = [], leGustaEscucharMusica = true, nivelDeAguante = 100)
	
	const roberto = new Checo(peso = 80, jarrasCompradas = [], leGustaEscucharMusica = true, nivelDeAguante = 100)
	
	const wanda = new Aleman(peso = 70, jarrasCompradas = [], leGustaEscucharMusica = true, nivelDeAguante = 100)
	
	const carpa1 = new Carpa(limiteDeGente = 5, tieneUnaBandaTradicional = true, marcaQueVende = hobfrau)
	
	method initialize() {
		alfonso.comprarJarra(jarra1)
		alfonso.comprarJarra(jarra2)
		roberto.comprarJarra(jarra3)
		roberto.comprarJarra(jarra2)
		eduardo.comprarJarra(jarra3)
		eduardo.comprarJarra(jarra2)
	}
	
	test "carpa1 deja entrar a Eduardo"{
    	assert.that(carpa1.dejaIngresarA(eduardo))
	}
	
	test "carpa1 no deja entrar a Alfonso"{
    	assert.notThat(carpa1.dejaIngresarA(alfonso))
	}
	
	test "carpa1 sirve jarra de 1 litro a Eduardo"{
    	eduardo.entrarALaCarpa(carpa1)
    	carpa1.servirJarraDe_LitrosA_(1, eduardo)
    	assert.that(eduardo.jarrasCompradas().any({j => j.contenido() == carpa1.marcaQueVende()}))
	}
	
	test "carpa1 no sirve jarra de 1 litro a Alfonso y da error"{
    	assert.throwsExceptionWithMessage("La persona no estÃ¡ en la carpa",{carpa1.servirJarraDe_LitrosA_(1, alfonso)})
	}
	
	test "hay 2 ebrios empedernidos"{
		eduardo.entrarALaCarpa(carpa1)
		roberto.entrarALaCarpa(carpa1)
    	assert.equals(carpa1.gente().filter({e=>e.esEbrioEmpedernido()}).size(),2)
	}
}